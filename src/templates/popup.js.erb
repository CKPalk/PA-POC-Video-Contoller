(function() {

  function getThumbnailClassForSentiment(sentiment) {
    switch (sentiment) {
      case VIDEO_SENTIMENT.LIKE: return 'liked'
      case VIDEO_SENTIMENT.SNOOZE: return 'snoozed'
      case VIDEO_SENTIMENT.NONE: return 'no-sentiment'
      default:
        return ''
    }
  }

  function setViewCounters(videos) {
    const { LIKE, SNOOZE, NONE } = VIDEO_SENTIMENT
    let liked = 0, snoozed = 0, unrated = 0

    videos.forEach(({ sentiment }) => {
      switch (sentiment) {
        case LIKE:   liked++;   break
        case SNOOZE: snoozed++; break
        case NONE:   unrated++; break
      }
    })

    const like_counter = document.getElementById('like-counter'),
          unrated_counter = document.getElementById('none-counter'),
          snooze_counter = document.getElementById('snooze-counter')

    like_counter.innerText = `+${liked}`
    unrated_counter.innerText = `${unrated}`
    snooze_counter.innerText = `-${snoozed}`
  }

  window.onload = () => {
    const video_container = document.getElementById('videos-container'),
          header_title = document.getElementById('header-title')


    if (!video_container || !header_title) {
      return
    }

    const local_storage_videos_key = '<%= @local_storage_videos_key %>'

    getStorageRecord(local_storage_videos_key)
      .then(all_videos => {

        const filteredVideos = all_videos
          .filter(v => /^data:image\/.*;base64,/.test(v.screenshot))
          .filter(v => !!v.sentiment)

        const hasVideos = !!filteredVideos && filteredVideos.length > 0

        header_title.innerText = hasVideos ? 'Ads you\'ve seen:' : 'No video ads yet.'
        setViewCounters(filteredVideos)

        // We reverse the array so newest content is starts on left
        filteredVideos.reverse().forEach(({ screenshot, sentiment }) => {
            const thumbnail_element = document.createElement('img')
            thumbnail_element.className = `thumbnail ${getThumbnailClassForSentiment(sentiment)}`
            thumbnail_element.src = screenshot
            video_container.appendChild(thumbnail_element)
          })
      })

  }

})()
