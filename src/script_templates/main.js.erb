/** main.js.erb
 *  This script is run at the end of matched documents.
*/

/* TODO: Move these constants to the rb file **********************************/
const ATTEMPTS_TO_LOCATE_VIDEOS = 3
const OVERLAY_CLASSNAME = '__PA_OVERLAY__'
/******************************************************************************/

function noop() {}

['log', 'info', 'error'].map(f => {
  console[f] = function() { console[f]('PA-Ext:', ...arguments) }
})

/**
 * Finds or creates a new overlay for the video element.
 * @param   {Object}  video  The video HTML element
 * @return  {Object}         The overlay HTML element
 */
function findOrCreateOverlay(video) {
  const container = video.parentElement
  const overlay_search = Array(...container.getElementsByClassName(OVERLAY_CLASSNAME))
  if (overlay_search.length >= 1) {
    // Remove any extra overlays and keeping and returning only one
    overlay_search.slice(1).map(container.removeChild)
    return overlay_search.item(0)
  } else {
    // No overlays found, create one and insert it just before the video
    const overlay = document.createElement('div')
    overlay.className = OVERLAY_CLASSNAME
    overlay.style.position = 'absolute'
    overlay.style.width = `${video.offsetWidth}px`
    overlay.style.height = `${video.offsetHeight}px`
    overlay.style.zIndex = 1000
    overlay.style.backgroundColor = 'red'
    container.insertBefore(overlay, video)
    return overlay
  }
}

/**
 * Pauses and shows overlay over video.
 * @param   {Object}  video  A video element on the page.
 */
function handleVideo(video) {

  // Pause video at 0s
  info(video)
  video.currentTime = 0
  video.pause()

  const overlay = findOrCreateOverlay(video)
  info(overlay)
}


/**
 * Searches document for video elements, if there none it tries attempts
 * searching the document again after progressively long timeouts.
 * Any videos found are then processed.
*/
function main(attempts_left) {
  if (attempts_left === 0) return

  // Find all <video /> elements in the document
  const videos = Array(...document.getElementsByTagName('video'))

  if (videos.length === 0) {
    const timeout = parseInt(2 * attempts_left * 1000)
    setTimeout(() => main(attempts_left - 1), timeout)
    return
  }

  videos.map(video => {
    // For each video
    video.onloadeddata = () => {
      // Once the video has loaded, wait 0.5s before working with it
      setTimeout(() => handleVideo(video), 500)
    }
  })
}



if (typeof main === 'function') {
  main(ATTEMPTS_TO_LOCATE_VIDEOS)
}
